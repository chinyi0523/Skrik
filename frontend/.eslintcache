<<<<<<< HEAD
[{"/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/index.js":"1","/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/reportWebVitals.js":"2","/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/App.js":"3","/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/Menu.js":"4","/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/Editor.js":"5","/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/Login.js":"6","/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/useEdit.js":"7","/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/structure.js":"8","/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/components/codeSelect.js":"9","/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/useStructure.js":"10","/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/components/socialButton.js":"11","/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/components/modal.js":"12"},{"size":502,"mtime":1609064618134,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1609064618135,"results":"15","hashOfConfig":"14"},{"size":1179,"mtime":1609064618131,"results":"16","hashOfConfig":"14"},{"size":1080,"mtime":1609208648036,"results":"17","hashOfConfig":"14"},{"size":2338,"mtime":1609064618132,"results":"18","hashOfConfig":"14"},{"size":9629,"mtime":1609206215675,"results":"19","hashOfConfig":"14"},{"size":1804,"mtime":1609064618136,"results":"20","hashOfConfig":"14"},{"size":8340,"mtime":1609064618135,"results":"21","hashOfConfig":"14"},{"size":1154,"mtime":1609064618133,"results":"22","hashOfConfig":"14"},{"size":7945,"mtime":1609064618136,"results":"23","hashOfConfig":"14"},{"size":342,"mtime":1609187463782,"results":"24","hashOfConfig":"14"},{"size":544,"mtime":1609206729760,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"mo89la",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/index.js",[],["55","56"],"/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/reportWebVitals.js",[],"/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/App.js",["57","58","59","60"],"import React, { Component } from 'react'\nimport { useState, useEffect } from 'react';\n// import useLocalStorage from '../hooks/useLocalStorage'\nimport './App.css';\nimport Login from './Login';\nimport Editor from './Editor';\nimport Menu from './Menu';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [python, setPython] = useState('');\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/Login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"/Editor\">Editor</Link>\n            </li>\n            <li>\n              <Link to=\"/Menu\">Menu</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/Login\">\n            <Login/>\n          </Route>\n          <Route path=\"/Editor\">\n            <Editor/>\n          </Route>\n          <Route path=\"/Menu\">\n            <Menu/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\n\n\nexport default App;\n","/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/Menu.js",["61","62"],"/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/Editor.js",[],"/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/Login.js",[],"/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/useEdit.js",[],"/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/structure.js",["63","64","65"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { IconContext } from \"react-icons\";\nimport { AiOutlineFile, AiOutlineFolder, AiOutlineFolderOpen } from \"react-icons/ai\";\nimport { DiJavascript1, DiCss3Full, DiHtml5, DiReact, DiPython } from \"react-icons/di\";\nimport { VscNewFile, VscNewFolder, VscRefresh, VscCollapseAll } from \"react-icons/vsc\";\nimport { SiCplusplus, SiJson } from \"react-icons/si\";\nimport \"./styles.css\";\n//import { components } from \"react-select/dist/react-select.cjs.dev\";\nimport useStructure from './useStructure'\n//import rightClick from './components/rightClick'\n\nconst FILE_ICONS = {\n    js: <DiJavascript1 />,\n    css: <DiCss3Full />,\n    html: <DiHtml5 />,\n    jsx: <DiReact />,\n    py: <DiPython />,\n    cpp: <SiCplusplus />,\n    json: <SiJson />\n};\n\nconst StyledTree = styled.div`\n  line-height: 1.5;\n`;\nconst Collapsible = styled.div`\n  height: ${p => (p.isOpen ? \"0\" : \"auto\")};\n  overflow: hidden;\n`;\n\nexport default function Structure() {\n\n    const File = ({ name, filepath, focusOn }) => {\n        let ext = name.split(\".\")[1];\n\n        return (\n            <div id={filepath} className={focusOn ? \"fileFocus\" : \"file\"} filepath={filepath} key={filepath}>\n                {FILE_ICONS[ext] || <AiOutlineFile />}\n                <span className=\"fileSpan\" onClick={(event) => handleclickFile(event)} key={filepath + ' span'}>{name}</span>\n            </div>\n        );\n    };\n\n    const Folder = ({ name, children, folderpath, focusOn }) => {\n        const [isOpen, setIsOpen] = useState(false);\n\n        const handleToggle = e => {\n            e.preventDefault();\n            setIsOpen(!isOpen);\n        };\n\n        return (\n            <div id={folderpath} className={focusOn ? \"folderFocus\" : \"folder\"} folderpath={folderpath} key={folderpath}>\n                <div className=\"folder--label\" onClick={handleToggle} key={folderpath + ' div'}>\n                    {(!isOpen) ? <AiOutlineFolderOpen /> : <AiOutlineFolder />}\n                    <span className=\"folderSpan\" key={folderpath + ' span'} onClick={(event) => handleclickFolder(event)}>{name}</span>\n                </div>\n                <Collapsible isOpen={isOpen}>{children}</Collapsible>\n            </div>\n        );\n    };\n    const Input = ({ isFolder, filepath, focusOn }) => {\n        return (\n            <div id={filepath} className={focusOn ? \"fileFocus\" : \"file\"} filepath={filepath} key={filepath}>\n                {/* onClick={(event)=>console.log(\"Click on \",event.target)} */}\n                {isFolder ? <AiOutlineFolder /> : <AiOutlineFile />}\n                <input className=\"inputSpan\" placeholder={isFolder ? \"Type folder name here\" : \"Type file name here\"} onKeyPress={(event) => handlePressEnter(event, isFolder)}></input>\n            </div>\n        )\n    }\n    const Tree = ({ children }) => {\n        return <StyledTree>{children}</StyledTree>;\n    };\n    Tree.Input = Input;\n    Tree.File = File;\n    Tree.Folder = Folder;\n    const handlePressEnter = (event, isFolder) => {\n        if (event.key === 'Enter') {\n            let newFileName = event.target.value\n            SaveToTree(newFileName, isFolder)\n        }\n    }\n    const handleAddNewFile = () => {\n        AddNewFile(false)\n    }\n    const handleAddNewFolder = () => {\n        AddNewFile(true)\n    }\n    const FolderStructure = ({ projectName }) => {\n        return (\n            <div className=\"title\">\n                <span className=\"titleName\">{projectName}</span>\n                <IconContext.Provider value={{ className: 'react-icons' }}>\n                    <div className=\"titleFunction\">\n                        <VscNewFile onClick={() => handleAddNewFile()} />\n                        <VscNewFolder onClick={() => handleAddNewFolder()} />\n                        <VscRefresh onClick={() => { alert(\"Refresh\") }} />\n                        <VscCollapseAll onClick={() => { alert(\"Collapse All\") }} />\n                    </div>\n                </IconContext.Provider>\n            </div>\n        )\n    }\n    let filepath = '';\n    const displayStruct = (ele, i) => {\n        if (Array.isArray(ele)) {\n            return ele.map(displayStruct)\n        }\n        else if (ele === \"EOF\") {\n            let spl = filepath.split(\"_\")\n            filepath = filepath.substr(0, filepath.length - 1 - spl[spl.length - 2].length)\n        }\n        else if (ele.type === \"file\") {\n            return <Tree.File name={ele.name} filepath={filepath + i} focusOn={ele.status === 'on'} />\n        }\n        else if (ele.type === \"folder\") {\n            filepath += `${i}_`\n            return (\n                <Tree.Folder name={ele.name} folderpath={filepath.substr(0, filepath.length - 1)} focusOn={ele.status === 'innestopenFocus'}>\n                    {\n                        displayStruct(ele.data)\n                    }\n                </Tree.Folder>\n            )\n        }\n        else if (ele.type === \"blankFile\") {\n            if (ele.displayAddBlank)\n                return (\n                    <Tree.Input isFolder={false} filepath={filepath + i} focusOn={ele.status === 'false'} />\n                )\n        }\n        else if (ele.type === \"blankFolder\") {\n            if (ele.displayAddBlank)\n                return (\n                    <Tree.Input isFolder={true} filepath={filepath + i} focusOn={ele.status === 'false'} />\n                )\n        }\n\n    }\n    const str1 = [\n        {\n            type: \"blankFolder\",\n            displayAddBlank: false,\n        },\n        {\n            type: \"blankFile\",\n            displayAddBlank: false,\n        },\n    ]\n    const str = [\n        {\n            type: \"blankFolder\",\n            displayAddBlank: false,\n        },\n        {\n            type: \"folder\",\n            name: \"src\",\n            status: \"open\",\n            data: [\n                {\n                    type: \"blankFolder\",\n                    displayAddBlank: false,\n                },\n                {\n                    type: \"folder\",\n                    name: \"components\",\n                    status: \"open\",\n                    data: [\n                        {\n                            type: \"blankFolder\",\n                            displayAddBlank: false,\n                        },\n                        {\n                            type: \"blankFile\",\n                            displayAddBlank: false,\n                        },\n                        {\n                            type: \"file\",\n                            name: \"SkrikPage.js\",\n                            status: \"off\",\n                        },\n                        {\n                            type: \"file\",\n                            name: \"SkrikPage.css\",\n                            status: \"off\"\n                        },\n                        \"EOF\"\n                    ]\n                },\n                {\n                    type: \"blankFile\",\n                    displayAddBlank: false,\n                },\n                {\n                    type: \"file\",\n                    name: \"index.js\",\n                    status: \"off\"\n                },\n                {\n                    type: \"file\",\n                    name: \"index.html\",\n                    status: \"off\"\n                },\n                {\n                    type: \"file\",\n                    name: \"test.py\",\n                    status: \"off\"\n                },\n                \"EOF\"\n            ]\n        },\n        {\n            type: \"blankFile\",\n            displayAddBlank: false,\n        },\n        {\n            type: \"file\",\n            name: \"package.json\",\n            status: \"off\"\n        },\n\n    ]\n\n    const { treeStructure, loadStructure, resetStatus, onClickFile, onClickFolder, AddNewFile, SaveToTree, currentFilePath } = useStructure(str1);\n    const handleclickFile = (event) => {\n        let fp = event.target.parentNode.id\n        resetStatus()\n        onClickFile(String(fp))\n    }\n    const handleclickFolder = (event) => {\n        let fp = event.target.parentNode.parentNode.id\n        resetStatus()\n        onClickFolder(String(fp))\n    }\n    return (\n        <div className=\"App\">\n            <FolderStructure projectName=\"My Project\" />\n            <Tree>\n                {displayStruct(treeStructure)}\n            </Tree>\n            <rightClick/>\n        </div>\n    );\n}\n","/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/components/codeSelect.js",["66"],"import React, { useState } from 'react'\nimport Select from 'react-select'\n\n\n\nconst customStyles = {\n    control: (base, state) => ({\n        ...base,\n        width: '30vw',\n        background: \"#023950\",\n        borderRadius: state.isFocused ? \"3px 3px 0 0\" : 3,\n        borderColor: 'transparent',\n        boxShadow: state.isFocused ? null : null,\n        \"&:hover\": {\n            backgroundColor: state.isFocused ? \"#022244\" : \"#023950\",\n        }\n    }),\n    menu: (base, state) => ({\n        ...base,\n        background: \"#023950\",\n        borderRadius: 0,\n        marginTop: 0,\n    \n    }),\n    menuList: (base, state) => ({\n        ...base,\n        padding: 0,\n    }),\n    singleValue: (provided) => ({\n        ...provided,\n        color: '#eeeeee'\n    }),\n    option: (provided, state) => ({\n        ...provided,\n        color: '#eeeeee',\n        \"&:hover\": {\n            backgroundColor: state.isFocused ? \"#022244\" : \"#023950\",\n        }\n        \n    }),\n};\n\nfunction CodeSelect({options, onChange}) {\n    return <div>\n        <Select styles={customStyles} options={options} onChange={onChange} ></Select>\n    </div>\n}\nexport default CodeSelect;","/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/useStructure.js",[],"/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/components/socialButton.js",[],"/Users/anitalu/Desktop/web_final/CloudComputing_FinalProject/frontend/src/components/modal.js",["67","68"],"import React from 'react';\nimport './modal.css'\nconst Modal = (props) => {\n    const [display, setDisplay] = React.useState(true);\n    const open = () => {\n        setDisplay(true);\n    };\n    const close = () => {\n        setDisplay(false);\n    };\n    if (display) { \n        return (\n        <div className='modal-wrapper'>\n            <div className='modal-backdrop' />\n            <div className='modal-box'>\n                { props.children}\n            </div>\n        </div>\n        )\n    }\n    return null;\n    \n\n}\n\nexport default Modal;",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"77","line":2,"column":20,"nodeType":"75","messageId":"76","endLine":2,"endColumn":29},{"ruleId":"73","severity":1,"message":"78","line":18,"column":10,"nodeType":"75","messageId":"76","endLine":18,"endColumn":16},{"ruleId":"73","severity":1,"message":"79","line":18,"column":18,"nodeType":"75","messageId":"76","endLine":18,"endColumn":27},{"ruleId":"73","severity":1,"message":"80","line":16,"column":12,"nodeType":"75","messageId":"76","endLine":16,"endColumn":16},{"ruleId":"73","severity":1,"message":"81","line":16,"column":18,"nodeType":"75","messageId":"76","endLine":16,"endColumn":25},{"ruleId":"73","severity":1,"message":"82","line":150,"column":11,"nodeType":"75","messageId":"76","endLine":150,"endColumn":14},{"ruleId":"73","severity":1,"message":"83","line":224,"column":28,"nodeType":"75","messageId":"76","endLine":224,"endColumn":41},{"ruleId":"73","severity":1,"message":"84","line":224,"column":108,"nodeType":"75","messageId":"76","endLine":224,"endColumn":123},{"ruleId":"73","severity":1,"message":"85","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"86","line":5,"column":11,"nodeType":"75","messageId":"76","endLine":5,"endColumn":15},{"ruleId":"73","severity":1,"message":"87","line":8,"column":11,"nodeType":"75","messageId":"76","endLine":8,"endColumn":16},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'python' is assigned a value but never used.","'setPython' is assigned a value but never used.","'list' is assigned a value but never used.","'setList' is assigned a value but never used.","'str' is assigned a value but never used.","'loadStructure' is assigned a value but never used.","'currentFilePath' is assigned a value but never used.","'useState' is defined but never used.","'open' is assigned a value but never used.","'close' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/App.js":"1","/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/components/codeSelect.js":"2","/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/useEdit.js":"3","/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/Editor.js":"4","/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/structure.js":"5","/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/reportWebVitals.js":"6","/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/index.js":"7","/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/useStructure.js":"8","/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/Login.js":"9","/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/Menu.js":"10","/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/components/trans.js":"11"},{"size":1226,"mtime":1609167557625,"results":"12","hashOfConfig":"13"},{"size":1154,"mtime":1609064002442,"results":"14","hashOfConfig":"13"},{"size":1804,"mtime":1609064002445,"results":"15","hashOfConfig":"13"},{"size":2338,"mtime":1609064002442,"results":"16","hashOfConfig":"13"},{"size":6279,"mtime":1609167331718,"results":"17","hashOfConfig":"13"},{"size":362,"mtime":1609064002444,"results":"18","hashOfConfig":"13"},{"size":502,"mtime":1609064002444,"results":"19","hashOfConfig":"13"},{"size":7965,"mtime":1609166565429,"results":"20","hashOfConfig":"13"},{"size":3491,"mtime":1609064002442,"results":"21","hashOfConfig":"13"},{"size":591,"mtime":1609064002442,"results":"22","hashOfConfig":"13"},{"size":1667,"mtime":1609167763060,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1o6u66q",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/App.js",["49"],"/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/components/codeSelect.js",["50"],"import React, { useState } from 'react'\nimport Select from 'react-select'\n\n\n\nconst customStyles = {\n    control: (base, state) => ({\n        ...base,\n        width: '30vw',\n        background: \"#023950\",\n        borderRadius: state.isFocused ? \"3px 3px 0 0\" : 3,\n        borderColor: 'transparent',\n        boxShadow: state.isFocused ? null : null,\n        \"&:hover\": {\n            backgroundColor: state.isFocused ? \"#022244\" : \"#023950\",\n        }\n    }),\n    menu: (base, state) => ({\n        ...base,\n        background: \"#023950\",\n        borderRadius: 0,\n        marginTop: 0,\n    \n    }),\n    menuList: (base, state) => ({\n        ...base,\n        padding: 0,\n    }),\n    singleValue: (provided) => ({\n        ...provided,\n        color: '#eeeeee'\n    }),\n    option: (provided, state) => ({\n        ...provided,\n        color: '#eeeeee',\n        \"&:hover\": {\n            backgroundColor: state.isFocused ? \"#022244\" : \"#023950\",\n        }\n        \n    }),\n};\n\nfunction CodeSelect({options, onChange}) {\n    return <div>\n        <Select styles={customStyles} options={options} onChange={onChange} ></Select>\n    </div>\n}\nexport default CodeSelect;",["51","52"],"/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/useEdit.js",[],"/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/Editor.js",[],"/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/structure.js",["53","54"],"/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/reportWebVitals.js",[],"/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/index.js",[],"/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/useStructure.js",[],"/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/Login.js",[],"/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/Menu.js",["55"],"import React from 'react';\n\nfunction add_folder() { \n\n}\nconst initList = [\n    {\n        id: '0',\n        name: 'folder1'\n    }\n];\n\n\nconst Menu = () => { \n    const [list, setList] = React.useState(initList);\n    return (\n        <div id='menu_container' >\n            <ul>\n                {list.map((item) => (\n                    <div className='menu_folder' key={item.id}>{item.name}</div>\n                    // <li >{item.name}</li>\n                ))}\n            </ul>\n            <button id='menu_add_btn' onClick={add_folder}>+</button>\n        </div>\n    )\n}\n\n\nexport default Menu;","/Users/chinyi0523/Desktop/CloudComputing_FinalProject/frontend/src/components/trans.js",[],{"ruleId":"56","severity":1,"message":"57","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":18},{"ruleId":"56","severity":1,"message":"57","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"56","severity":1,"message":"64","line":145,"column":28,"nodeType":"58","messageId":"59","endLine":145,"endColumn":41},{"ruleId":"56","severity":1,"message":"65","line":145,"column":108,"nodeType":"58","messageId":"59","endLine":145,"endColumn":123},{"ruleId":"56","severity":1,"message":"66","line":15,"column":18,"nodeType":"58","messageId":"59","endLine":15,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"'loadStructure' is assigned a value but never used.","'currentFilePath' is assigned a value but never used.","'setList' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> folder2
